// generated by Fast Light User Interface Designer (fluid) version 1.0011

#ifndef PoleZeroEditorGUI_hxx
#define PoleZeroEditorGUI_hxx
#include <FL/Fl.H>
#include "EMode.hxx"
#include "AmplitudeResponse.hxx"
#include "PhaseResponse.hxx"
#include "PoleZeroPlane.hxx"
#include "PoleZeroList.hxx"
#include "ToolTipButton.hxx"
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Scroll.H>
#include <FL/Fl_Browser.H>
#include <FL/Fl_Menu_Bar.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Slider.H>
#include <FL/Fl_Window.H>
#include <FL/Fl_Return_Button.H>

class PoleZeroEditorGUI {
public:
  PoleZeroEditorGUI();
  Fl_Double_Window *mWindow;
  PoleZeroPlane *mPoleZeroPlane;
  Fl_Amplitude_Response *mAmplitudeResponse;
  Fl_Phase_Response *mPhaseResponse;
  PoleZeroList *mPolesList;
private:
  inline void cb_mPolesList_i(PoleZeroList*, void*);
  static void cb_mPolesList(PoleZeroList*, void*);
public:
  PoleZeroList *mZerosList;
private:
  inline void cb_mZerosList_i(PoleZeroList*, void*);
  static void cb_mZerosList(PoleZeroList*, void*);
public:
  Fl_Browser *mBCoefsBrowser;
  Fl_Browser *mACoefsBrowser;
  static Fl_Menu_Item menu_[];
private:
  inline void cb_Quit_i(Fl_Menu_*, void*);
  static void cb_Quit(Fl_Menu_*, void*);
  inline void cb_Cut_i(Fl_Menu_*, void*);
  static void cb_Cut(Fl_Menu_*, void*);
  inline void cb_Delete_i(Fl_Menu_*, void*);
  static void cb_Delete(Fl_Menu_*, void*);
  inline void cb_Select_i(Fl_Menu_*, void*);
  static void cb_Select(Fl_Menu_*, void*);
  inline void cb_About_i(Fl_Menu_*, void*);
  static void cb_About(Fl_Menu_*, void*);
public:
  ToolTipButton *mAddPoleButton;
private:
  inline void cb_mAddPoleButton_i(ToolTipButton*, char*);
  static void cb_mAddPoleButton(ToolTipButton*, char*);
public:
  ToolTipButton *mAddZeroButton;
private:
  inline void cb_mAddZeroButton_i(ToolTipButton*, char*);
  static void cb_mAddZeroButton(ToolTipButton*, char*);
public:
  ToolTipButton *mSelectButton;
private:
  inline void cb_mSelectButton_i(ToolTipButton*, char*);
  static void cb_mSelectButton(ToolTipButton*, char*);
public:
  ToolTipButton *mMoveXYButton;
private:
  inline void cb_mMoveXYButton_i(ToolTipButton*, char*);
  static void cb_mMoveXYButton(ToolTipButton*, char*);
public:
  ToolTipButton *mMoveAngButton;
private:
  inline void cb_mMoveAngButton_i(ToolTipButton*, char*);
  static void cb_mMoveAngButton(ToolTipButton*, char*);
public:
  ToolTipButton *mMoveMagButton;
private:
  inline void cb_mMoveMagButton_i(ToolTipButton*, char*);
  static void cb_mMoveMagButton(ToolTipButton*, char*);
public:
  Fl_Button *mPlayButton;
  Fl_Button *mStopButton;
  Fl_Slider *mGainSlider;
private:
  void SetMoveMode(EMoveMode m);
  void SetAddMode(EAddMode m);
  void SelectAll(void);
  void RemoveSelected(void);
  void Edited(EPoleZero pz);
public:
  void About(void);
private:
  inline void cb_OK_i(Fl_Return_Button*, void*);
  static void cb_OK(Fl_Return_Button*, void*);
};
#endif

